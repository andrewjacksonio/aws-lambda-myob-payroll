{
	"id": "efc09842-ba51-5eb1-4950-7a6d7d011e1c",
	"name": "myobtests",
	"description": "",
	"order": [
		"e58eb0ec-cc8f-301e-192b-9fb7b18e4af4",
		"130df972-6039-331e-455d-4a0685a9b8fb",
		"ba6caab0-aae9-5513-ef2f-b799fb8b4a3c"
	],
	"folders": [],
	"timestamp": 1450485405411,
	"owner": "",
	"remoteLink": "",
	"public": false,
	"requests": [
		{
			"id": "130df972-6039-331e-455d-4a0685a9b8fb",
			"headers": "",
			"url": "{{url}}/myob-payroll",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "//assertion data\nvar payeeName = \"Ryan Chen\";\nvar payPeriod = \"01 March – 31 March\";\nvar payPeriodIncomeGross = 10000;\nvar payPeriodIncomeTax = 2696;\nvar payPeriodIncomeNet = 7304;\nvar payPeriodSuper = 1000;\n\nvar expectedColumns = 6;\n\n//tests\ntests[\"Has Content-Type: \" + responseHeaders.hasOwnProperty(\"Content-Type\")] = responseHeaders.hasOwnProperty(\"Content-Type\");\ntests[\"Status code is: \" + responseCode.code + ', Expected: 200'] = responseCode.code === 200;\n\nvar output = responseBody.replace(/\"/g,\"\").split(',');\ntests[\"Values returned: \" + output.length + ', Expected: ' + expectedColumns] = output.length === 6;\ntests[\"Payee name is: \" + output[0] + ', Expected: ' + payeeName] = output[0] === payeeName;\ntests[\"Payment period is: \" + output[1] + ', Expected: ' + payPeriod] = output[1] === payPeriod;\ntests[\"Gross income is: \" + output[2] + ', Expected: ' + payPeriodIncomeGross] = parseInt(output[2]) === payPeriodIncomeGross;;\ntests[\"Income tax is: \" + output[3] + ', Expected: ' + payPeriodIncomeTax] = parseInt(output[3]) === payPeriodIncomeTax;\ntests[\"Net income is: \" + output[4] + ', Expected: ' + payPeriodIncomeNet] = parseInt(output[4]) === payPeriodIncomeNet;\ntests[\"Super amount is: \" + output[5] + ', Expected: ' + payPeriodSuper] = parseInt(output[5]) === payPeriodSuper;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1450494338778,
			"name": "Ryan Chen",
			"description": "",
			"collectionId": "efc09842-ba51-5eb1-4950-7a6d7d011e1c",
			"responses": [],
			"rawModeData": "{\r\n    \"firstName\": \"Ryan\",\r\n    \"lastName\": \"Chen\",\r\n    \"annualSalary\": 120000,\r\n    \"superRate\": 10,\r\n    \"paymentPeriod\": \"01 March – 31 March\"\r\n}"
		},
		{
			"id": "ba6caab0-aae9-5513-ef2f-b799fb8b4a3c",
			"headers": "",
			"url": "{{url}}/myob-payroll",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "//assertion data\nvar payeeName = \"Kevin Bacon\";\nvar payPeriod = \"01 June – 30 June\";\nvar payPeriodIncomeGross = 151475;\nvar payPeriodIncomeTax = 43005;\nvar payPeriodIncomeNet = 108470;\nvar payPeriodSuper = 14390;\n\nvar expectedColumns = 6;\n\n//tests\ntests[\"Has Content-Type: \" + responseHeaders.hasOwnProperty(\"Content-Type\")] = responseHeaders.hasOwnProperty(\"Content-Type\");\ntests[\"Status code is: \" + responseCode.code + ', Expected: 200'] = responseCode.code === 200;\n\nvar output = responseBody.replace(/\"/g,\"\").split(',');\ntests[\"Values returned: \" + output.length + ', Expected: ' + expectedColumns] = output.length === 6;\ntests[\"Payee name is: \" + output[0] + ', Expected: ' + payeeName] = output[0] === payeeName;\ntests[\"Payment period is: \" + output[1] + ', Expected: ' + payPeriod] = output[1] === payPeriod;\ntests[\"Gross income is: \" + output[2] + ', Expected: ' + payPeriodIncomeGross] = parseInt(output[2]) === payPeriodIncomeGross;\ntests[\"Income tax is: \" + output[3] + ', Expected: ' + payPeriodIncomeTax] = parseInt(output[3]) === payPeriodIncomeTax;\ntests[\"Net income is: \" + output[4] + ', Expected: ' + payPeriodIncomeNet] = parseInt(output[4]) === payPeriodIncomeNet;\ntests[\"Super amount is: \" + output[5] + ', Expected: ' + payPeriodSuper] = parseInt(output[5]) === payPeriodSuper;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1450494302206,
			"name": "Kevin Bacon",
			"description": "",
			"collectionId": "efc09842-ba51-5eb1-4950-7a6d7d011e1c",
			"responses": [],
			"rawModeData": "{\n  \"firstName\": \"Kevin\",\n  \"lastName\": \"Bacon\",\n  \"annualSalary\": 140000,\n  \"superRate\": 9.5,\n  \"paymentPeriod\": \"1 jun 2015 – 30 jun 2016\"\n}"
		},
		{
			"id": "e58eb0ec-cc8f-301e-192b-9fb7b18e4af4",
			"headers": "",
			"url": "{{url}}/myob-payroll",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "//assertion data\nvar payeeName = \"David Rudd\";\nvar payPeriod = \"01 March – 31 March\";\nvar payPeriodIncomeGross = 5004;\nvar payPeriodIncomeTax = 922;\nvar payPeriodIncomeNet = 4082;\nvar payPeriodSuper = 450;\n\nvar expectedColumns = 6;\n\n//tests\ntests[\"Has Content-Type: \" + responseHeaders.hasOwnProperty(\"Content-Type\")] = responseHeaders.hasOwnProperty(\"Content-Type\");\ntests[\"Status code is: \" + responseCode.code + ', Expected: 200'] = responseCode.code === 200;\n\nvar output = responseBody.replace(/\"/g,\"\").split(',');\ntests[\"Values returned: \" + output.length + ', Expected: ' + expectedColumns] = output.length === 6;\ntests[\"Payee name is: \" + output[0] + ', Expected: ' + payeeName] = output[0] === payeeName;\ntests[\"Payment period is: \" + output[1] + ', Expected: ' + payPeriod] = output[1] === payPeriod;\ntests[\"Gross income is: \" + output[2] + ', Expected: ' + payPeriodIncomeGross] = parseInt(output[2]) === payPeriodIncomeGross;\ntests[\"Income tax is: \" + output[3] + ', Expected: ' + payPeriodIncomeTax] = parseInt(output[3]) === payPeriodIncomeTax;\ntests[\"Net income is: \" + output[4] + ', Expected: ' + payPeriodIncomeNet] = parseInt(output[4]) === payPeriodIncomeNet;\ntests[\"Super amount is: \" + output[5] + ', Expected: ' + payPeriodSuper] = parseInt(output[5]) === payPeriodSuper;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1450494356305,
			"name": "David Rudd",
			"description": "",
			"collectionId": "efc09842-ba51-5eb1-4950-7a6d7d011e1c",
			"responses": [],
			"rawModeData": "{\r\n  \"firstName\": \"David\",\r\n  \"lastName\": \"Rudd\",\r\n  \"annualSalary\": 60050,\r\n  \"superRate\": 9,\r\n  \"paymentPeriod\": \"01 March – 31 March\"\r\n}"
		}
	]
}
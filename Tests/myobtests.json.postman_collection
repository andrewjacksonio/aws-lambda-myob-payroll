{
	"id": "efc09842-ba51-5eb1-4950-7a6d7d011e1c",
	"name": "myobtests",
	"description": "",
	"order": [
		"e58eb0ec-cc8f-301e-192b-9fb7b18e4af4",
		"130df972-6039-331e-455d-4a0685a9b8fb",
		"ba6caab0-aae9-5513-ef2f-b799fb8b4a3c"
	],
	"folders": [],
	"timestamp": 1450485405411,
	"owner": "",
	"remoteLink": "",
	"public": false,
	"requests": [
		{
			"id": "130df972-6039-331e-455d-4a0685a9b8fb",
			"headers": "",
			"url": "https://xiuhqdeci7.execute-api.us-west-2.amazonaws.com/prod/myob-payroll",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Content-Type is: OK\"] = responseHeaders.hasOwnProperty(\"Content-Type\");\ntests[\"Status code is: 200\"] = responseCode.code === 200;\n\nvar output = responseBody.replace(/\"/g,\"\").split(',');\ntests[\"Returned expected number of values: 6\"] = output.length === 6;\ntests[\"Name is correct: \" + output[0]] = output[0] === \"Ryan Chen\";\ntests[\"Payment period is correct: \" + output[1]] = output[1] === \"01 March – 31 March\";\ntests[\"Gross income is correct: \" + output[2]] = parseInt(output[2]) === 10000;\ntests[\"Income tax is correct: \" + output[3]] = parseInt(output[3]) === 2696;\ntests[\"Net income is correct: \" + output[4]] = parseInt(output[4]) === 7304;\ntests[\"Super amount is correct: \" + output[5]] = parseInt(output[5]) === 1000;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1450487249781,
			"name": "Ryan Chen",
			"description": "",
			"collectionId": "efc09842-ba51-5eb1-4950-7a6d7d011e1c",
			"responses": [],
			"rawModeData": "{\r\n    \"firstName\": \"Ryan\",\r\n    \"lastName\": \"Chen\",\r\n    \"annualSalary\": 120000,\r\n    \"superRate\": 10,\r\n    \"paymentPeriod\": \"01 March – 31 March\"\r\n}"
		},
		{
			"id": "ba6caab0-aae9-5513-ef2f-b799fb8b4a3c",
			"headers": "",
			"url": "https://xiuhqdeci7.execute-api.us-west-2.amazonaws.com/prod/myob-payroll",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Content-Type is: OK\"] = responseHeaders.hasOwnProperty(\"Content-Type\");\ntests[\"Status code is: 200\"] = responseCode.code === 200;\n\nvar output = responseBody.replace(/\"/g,\"\").split(',');\ntests[\"Returned expected number of values: 6\"] = output.length === 6;\ntests[\"Name is correct: \" + output[0]] = output[0] === \"Kevin Bacon\";\ntests[\"Payment period is correct: \" + output[1]] = output[1] === \"01 June – 30 June\";\ntests[\"Gross income is correct: \" + output[2]] = parseInt(output[2]) === 151475;\ntests[\"Income tax is correct: \" + output[3]] = parseInt(output[3]) === 43005;\ntests[\"Net income is correct: \" + output[4]] = parseInt(output[4]) === 108470;\ntests[\"Super amount is correct: \" + output[5]] = parseInt(output[5]) === 14390;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1450487071477,
			"name": "Kevin Bacon",
			"description": "",
			"collectionId": "efc09842-ba51-5eb1-4950-7a6d7d011e1c",
			"responses": [],
			"rawModeData": "{\n  \"firstName\": \"Kevin\",\n  \"lastName\": \"Bacon\",\n  \"annualSalary\": 140000,\n  \"superRate\": 9.5,\n  \"paymentPeriod\": \"1 jun 2015 – 30 jun 2016\"\n}"
		},
		{
			"id": "e58eb0ec-cc8f-301e-192b-9fb7b18e4af4",
			"headers": "",
			"url": "https://xiuhqdeci7.execute-api.us-west-2.amazonaws.com/prod/myob-payroll",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Content-Type is: OK\"] = responseHeaders.hasOwnProperty(\"Content-Type\");\ntests[\"Status code is: 200\"] = responseCode.code === 200;\n\nvar output = responseBody.replace(/\"/g,\"\").split(',');\ntests[\"Returned expected number of values: 6\"] = output.length === 6;\ntests[\"Name is correct: \" + output[0]] = output[0] === \"David Rudd\";\ntests[\"Payment period is correct: \" + output[1]] = output[1] === \"01 March – 31 March\";\ntests[\"Gross income is correct: \" + output[2]] = parseInt(output[2]) === 5004;\ntests[\"Income tax is correct: \" + output[3]] = parseInt(output[3]) === 922;\ntests[\"Net income is correct: \" + output[4]] = parseInt(output[4]) === 4082;\ntests[\"Super amount is correct: \" + output[5]] = parseInt(output[5]) === 450;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1450487083630,
			"name": "David Rudd",
			"description": "",
			"collectionId": "efc09842-ba51-5eb1-4950-7a6d7d011e1c",
			"responses": [],
			"rawModeData": "{\r\n  \"firstName\": \"David\",\r\n  \"lastName\": \"Rudd\",\r\n  \"annualSalary\": 60050,\r\n  \"superRate\": 9,\r\n  \"paymentPeriod\": \"01 March – 31 March\"\r\n}"
		}
	]
}